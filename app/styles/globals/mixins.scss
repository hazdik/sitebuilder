@import "compass/css3";
@import "compass/css3/user-interface";
@import "compass/typography/text";

// The micro clearfix http://nicolasgallagher.com/micro-clearfix-hack/
@mixin clearfix() {
    *zoom : 1;
    &:before, &:after {
        content     : "";
        display     : table;
        // Fixes Opera/contenteditable bug:
        // http://nicolasgallagher.com/micro-clearfix-hack/#comment-36952
        line-height : 0;
    }
    &:after {
        clear : both;
    }
}

// .example { @include triangle(5px, #fff, bottom); }
@mixin triangle($triangleSize, $triangleColor, $triangleDirection) {
    content : "";
    display : block;
    width   : 0;
    height  : 0;
    border  : solid $triangleSize;
    @if ($triangleDirection == top) {
        border-color : $triangleColor transparent transparent transparent;
    }
    @if ($triangleDirection == bottom) {
        border-color : transparent transparent $triangleColor transparent;
    }
    @if ($triangleDirection == left) {
        border-color : transparent transparent transparent $triangleColor;
    }
    @if ($triangleDirection == right) {
        border-color : transparent $triangleColor transparent transparent;
    }
}

// Use rems to adjust all font sizes in one go
@mixin font-size($size, $is-important : false) {
    $size : if(unitless($size), $size, $size / 1px);

    @if $is-important {
        font-size : $size + px !important;
        font-size : ($size / 16) + rem !important;
    } @else {
        font-size : $size + px;
        font-size : ($size / 16) + rem;
    }
}

@mixin image-2x($image, $width, $height) {
    @media (min--moz-device-pixel-ratio : 1.3),
    (-o-min-device-pixel-ratio          : 2.6/2),
    (-webkit-min-device-pixel-ratio     : 1.3),
    (min-device-pixel-ratio             : 1.3),
    (min-resolution                     : 1.3dppx) {
        /* on retina, use image that's scaled by 2 */
        background-image                : url($image);
        background-size                 : $width $height;
    }
}

@mixin animation($prop) {
    animation         : $prop;
    -moz-animation    : $prop;
    -webkit-animation : $prop;
    -o-animation      : $prop;
}

@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }
    @-moz-keyframes #{$name} {
        @content;
    }
    @-ms-keyframes #{$name} {
        @content;
    }
    @keyframes #{$name} {
        @content;
    }
}

@mixin hyperlinks($link, $visited, $hover, $active, $cursor : pointer) {
    &:link {
        color  : $link !important;
        cursor : $cursor;
    }
    &:visited {
        color  : $visited !important;
        cursor : $cursor;
    }
    &:hover {
        color  : $hover !important;
        cursor : $cursor;
    }
    &:active {
        color  : $active !important;
        cursor : $cursor;
    }
}

@mixin input-placeholder {
    &.placeholder {
        @content;
    }
    &:-moz-placeholder {
        @content;
    }
    &::-moz-placeholder {
        @content;
    }
    &:-ms-input-placeholder {
        @content;
    }
    &::-webkit-input-placeholder {
        @content;
    }
}

@mixin hide-transition($speed : 0.3s) {
    &.ng-hide-add,
    &.ng-hide-remove {
        -webkit-transition : $speed linear all;
        -moz-transition    : $speed linear all;
        -o-transition      : $speed linear all;
        transition         : $speed linear all;
        display            : block !important;
    }
    &.ng-hide-remove {
        opacity : 0;
    }
    &.ng-hide-remove.ng-hide-remove-active {
        opacity : 1;
    }
    &.ng-hide-add {
        opacity : 1;
    }
    &.ng-hide-add.ng-hide-add-active {
        opacity : 0;
    }
}

@mixin resetStyledCheckboxHover() {
    .styled-checkbox {
        &:hover {
            input {
                + label {
                    &:before {
                        color        : $cg0;
                        border-color : $colorMain;
                    }
                }
            }
        }
    }
}

@mixin formFieldState($textColor : #555555, $borderColor : #CCCCCC, $backgroundColor : #F5F5F5) {
    border-color : $borderColor;
    color: $textColor;
    background-color: $backgroundColor;
    //@include box-shadow($borderColor 0 0 0 1px inset);

    // Redeclare so transitions work
    &:hover {
        @include box-shadow(lighten($borderColor, 30%) 0 0 1px 1px);
    }

    &:focus {
        @include box-shadow(lighten($borderColor, 45%) 0 0 1px 1px);
    }
}

@mixin formInput() {
    // Specific to the Action form inputs so they all get the same treatment
    border: none;
    width: 96%;
    height: 40px;
    padding: 4px;
    font-size: 16px;

    @include formFieldState(inherit, #cccccc, #6f7f99);
    @include border-radius(5px);
}

@mixin chevronDropDown($borderColor, $offset : 6px, $borderWidth : 4px) {
    content          : '';
    position         : absolute;
    top              : 50%;
    right            : $offset;
    margin-top       : -2px;
    border           : $borderWidth solid transparent;
    border-width     : $borderWidth $borderWidth;
    border-top-color : $borderColor;
}

@mixin chevronSidebarDropDown($borderColor) {
    content          : '';
    position         : relative;
    top              : 10px;
    left             : 5px;
    border           : 4px solid transparent;
    border-width     : 4px 4px;
    border-top-color : $borderColor;
}

@mixin chevronDropLeft($borderColor, $offset : 6px) {
    @include chevronDropDown($borderColor, $offset);
    right               : $offset + 3;
    margin-top          : -5px;
    border-right-color  : $borderColor;
    border-top-color    : transparent;
    border-left-color   : transparent;
    border-bottom-color : transparent;
}

@mixin fontSemiBold($fontSize) {
    font-size   : $fontSize;
    font-family : 'Open Sans', Helvetica, Arial, sans-serif;
    font-weight : 600;
}

@mixin helperActionSection() {
    overflow   : auto;
    height     : 100%;
    min-height : $action-min-height;
}

